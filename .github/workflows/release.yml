name: Release

on:
  push:
    branches:
      - master
    paths:
      - "Cargo.toml"
  workflow_dispatch:


jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          METADATA=$(cargo metadata --format-version 1 --no-deps)
          VERSION=$(echo ${METADATA} | jq -r '.packages[] | select(.name == "nextver") | .version')
          if [ -z "${VERSION}" ]; then
            echo "VERSION should not be empty, likely problem with metadata or jq command"
            exit 1
          fi
          echo "Extracted version: ${VERSION}"
          echo "::notice title=Version::${VERSION}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      # some possibility for race condition here, but not a problem unless we're spamming this action
      - name: Create release if version does not exist
        env:
          GH_TOKEN: ${{ github.token }}
        id: version_check
        run: |
          TAG_NAME="v${{ steps.extract_version.outputs.version }}"
          REF="refs/tags/${TAG_NAME}"
          if git rev-parse -q --verify "${REF}"; then
            echo "Tag v$VERSION already exists, skipping release"
            echo "::error title=already_exists::Tag v$VERSION already exists, skipping release"
          else
            gh release create ${TAG_NAME} \
              -t "Release ${TAG_NAME}" \
              --generate-notes
          fi

# TODO:
  # build on some runners, e.g. ubuntu-latest, macos-latest, windows-latest
  # publish to crates.io
  # publish binaries as assets to github release